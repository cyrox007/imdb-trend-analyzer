import pandas as pd
from typing import Iterator, Tuple, Optional

def load_imdb_chunked(
    basics_path: str,
    ratings_path: str,
    crew_path: str,
    principals_path: Optional[str] = None,
    chunksize: int = 3000
) -> Iterator[Tuple[pd.DataFrame, Optional[pd.DataFrame]]]:
    """
    –ß–∏—Ç–∞–µ–º basics –ø–æ —á–∞–Ω–∫–∞–º, –∞ ratings –∏ crew ‚Äî —Ü–µ–ª–∏–∫–æ–º.
    principals —á–∏—Ç–∞–µ–º –ø–æ —á–∞–Ω–∫–∞–º, —á—Ç–æ–±—ã –Ω–µ —É–±–∏—Ç—å –ø–∞–º—è—Ç—å.
    """
    # –ó–∞–≥—Ä—É–∂–∞–µ–º ratings –∏ crew —Ü–µ–ª–∏–∫–æ–º (–æ–Ω–∏ –Ω–µ —Ç–∞–∫–∏–µ —É–∂ –±–æ–ª—å—à–∏–µ)
    print("üì• –ó–∞–≥—Ä—É–∂–∞—é ratings –∏ crew —Ü–µ–ª–∏–∫–æ–º...")
    df_ratings = pd.read_csv(ratings_path, sep='\t', compression='gzip', na_values=r'\N')
    df_crew = pd.read_csv(crew_path, sep='\t', compression='gzip', na_values=r'\N', dtype={'directors': 'str'})
    df_crew = df_crew[['tconst', 'directors']].drop_duplicates()

    # –ò—Ç–µ—Ä–∞—Ç–æ—Ä –¥–ª—è principals (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
    principals_iter = None
    if principals_path:
        principals_iter = pd.read_csv(
            principals_path,
            sep='\t',
            compression='gzip',
            na_values=r'\N',
            chunksize=chunksize
        )

    # –ß–∏—Ç–∞–µ–º basics –ø–æ —á–∞–Ω–∫–∞–º
    basics_iter = pd.read_csv(
        basics_path,
        sep='\t',
        compression='gzip',
        chunksize=chunksize,
        na_values=r'\N'
    )

    for basics_chunk in basics_iter:
        # –§–∏–ª—å—Ç—Ä: —Ç–æ–ª—å–∫–æ —Ñ–∏–ª—å–º—ã
        if 'titleType' in basics_chunk.columns:
            basics_chunk = basics_chunk[basics_chunk['titleType'] == 'movie']

        if basics_chunk.empty:
            yield basics_chunk, None
            continue

        # –ü–æ–ª—É—á–∞–µ–º tconst –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —á–∞–Ω–∫–∞
        tconst_chunk = basics_chunk['tconst'].tolist()

        # –§–∏–ª—å—Ç—Ä—É–µ–º ratings –∏ crew
        ratings_chunk = df_ratings[df_ratings['tconst'].isin(tconst_chunk)]
        crew_chunk = df_crew[df_crew['tconst'].isin(tconst_chunk)]

        # –û–±—ä–µ–¥–∏–Ω—è–µ–º
        merged = basics_chunk.merge(ratings_chunk, on='tconst', how='inner')
        merged = merged.merge(crew_chunk, on='tconst', how='left')
        merged['directors'] = merged['directors'].fillna('Unknown')

        # –ü–æ–ª—É—á–∞–µ–º —á–∞–Ω–∫ principals, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
        principals_chunk = None
        if principals_iter:
            try:
                full_principals_chunk = next(principals_iter)
                principals_chunk = full_principals_chunk[full_principals_chunk['tconst'].isin(tconst_chunk)]
            except StopIteration:
                principals_chunk = None

        yield merged, principals_chunk